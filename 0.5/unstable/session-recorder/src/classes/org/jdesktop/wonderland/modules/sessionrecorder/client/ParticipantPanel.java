/**
 * Copyright (c) 2016, Envisiture Consulting, LLC, All Rights Reserved
 */
package org.jdesktop.wonderland.modules.sessionrecorder.client;

import java.awt.Font;
import java.awt.MouseInfo;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.plaf.basic.BasicComboPopup;
import org.jdesktop.wonderland.client.cell.Cell;
import org.jdesktop.wonderland.modules.avatarbase.client.jme.cellrenderer.AvatarImiJME;

/**
 *
 * @author Abhishek Upadhyay <abhiit61@gmail.com>
 */
public class ParticipantPanel extends javax.swing.JPanel {

    private final Cell cell;

    /**
     * Creates new form Panel
     * @param cell
     * @param roles
     */
    public ParticipantPanel(Cell cell, String[] roles) {
        this.cell = cell;
        initComponents();
        if (!System.getProperty("os.name").contains("Windows")) {
            JComboBox cb = roleCombobox;
            final BasicComboPopup myPopup = (BasicComboPopup) cb.getUI()
                    .getAccessibleChild(cb, 0);
            myPopup.addPopupMenuListener(new PopupMenuListener() {
                public void popupMenuWillBecomeVisible(PopupMenuEvent e) {
                    BasicComboPopup popup = (BasicComboPopup) e.getSource();
                    popup.setLocation(MouseInfo.getPointerInfo().getLocation());
                }

                public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {
                }

                public void popupMenuCanceled(PopupMenuEvent e) {
                }
            });
        }
        roleCombobox.removeAllItems();
        roleCombobox.setVisible(false);
        cellCheckbox.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    roleCombobox.setVisible(true);
                } else {
                    roleCombobox.setVisible(false);
                }
            }
        });

        //populate values
        AvatarImiJME rend = (AvatarImiJME) cell.getCellRenderer(Cell.RendererType.RENDERER_JME);
        imi.character.Character avatar = rend.getAvatarCharacter();
        cellCheckbox.setText(avatar.getName());
        cellCheckbox.setFont(new Font("Verdana", Font.PLAIN, 12));
        for (String s : roles) {
            roleCombobox.addItem(s);
        }
        roleCombobox.setName(avatar.getName());
        roleCombobox.setFont(new Font("Verdana", Font.PLAIN, 12));
        roleCombobox.setVisible(false);
        cellCheckbox.addItemListener(new ItemListener() {

            public void itemStateChanged(ItemEvent e) {
                if (cellCheckbox.isSelected()) {
                    roleCombobox.setVisible(true);
                } else {
                    roleCombobox.setVisible(false);
                }
            }
        });
    }

    public JCheckBox getCellCheckbox() {
        return cellCheckbox;
    }

    public void setCellCheckbox(JCheckBox jCheckBox1) {
        this.cellCheckbox = jCheckBox1;
    }

    public JComboBox<String> getRoleCombobox() {
        return roleCombobox;
    }

    public void setRoleCombobox(JComboBox<String> jComboBox1) {
        this.roleCombobox = jComboBox1;
    }

    public Cell getCell() {
        return cell;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cellCheckbox = new javax.swing.JCheckBox();
        roleCombobox = new javax.swing.JComboBox<String>();

        setMaximumSize(new java.awt.Dimension(32977, 28));
        setMinimumSize(new java.awt.Dimension(190, 28));
        setPreferredSize(new java.awt.Dimension(211, 28));

        cellCheckbox.setText("jCheckBox1");

        roleCombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        roleCombobox.setMinimumSize(new java.awt.Dimension(56, 23));
        roleCombobox.setPreferredSize(new java.awt.Dimension(56, 23));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cellCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(roleCombobox, 0, 122, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cellCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roleCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cellCheckbox;
    private javax.swing.JComboBox<String> roleCombobox;
    // End of variables declaration//GEN-END:variables
}
